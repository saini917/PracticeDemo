package com.json;

import org.testng.annotations.Test;

import com.complexadvanced.AdvancedPosts;
import com.jayway.restassured.http.ContentType;
import com.jayway.restassured.response.Response;
import static com.jayway.restassured.RestAssured.*;

public class JasonServerRequest {
	
	//Get   /posts
	//@Test
	public void getRequest(){
		Response resp=given().
		when().
		get("http://localhost:3000/posts");
		
		System.out.println("Get response is: " +resp.asString());
	}
	
	
	//POST   /posts
	//@Test
	public void postRequest(){
		
		Response resp=given().
		body(" {\"id\":\"7\", "
				+ "\"title\": \"Saini\", "
				+ "\"author\":\"deepak\"}").
		when().
		then().
		contentType(ContentType.JSON).
		post("http://localhost:3000/posts");
		
		System.out.println(resp.asString());
		
	}
	
	//using POJO Class
	//@Test
	public void testPostRequest(){
		Posts posts=new Posts();
		posts.setId("7");
		posts.setTitle("post request by id");
		posts.setAuthor("siya");
		
		Response resp=given().
		body(posts).
		when().
		then().
		contentType(ContentType.JSON).
		post("http://localhost:3000/posts");
		
		System.out.println(resp.asString());
	}
	
	
	//PUT     /posts/1
	   //@Test
		public void testPutRequest(){
			Posts posts=new Posts();
			posts.setId("3");
			posts.setTitle("update author name");
			posts.setAuthor("update title name");
			
			Response resp=given().
			body(posts).
			when().
			then().
			contentType(ContentType.JSON).
			put("http://localhost:3000/posts/2");
			
			System.out.println(resp.asString());
		}
	   
	   //PATCH  /posts/1
	   //patch request is used to update the individual value of an object
	   //@Test
		public void testPatchRequest(){
			
			Response resp=given().
			body("{\"title\":\"update by Patch request\"}").
			when().
			then().
			contentType(ContentType.JSON).
			put("http://localhost:3000/posts/2");
			
			System.out.println(resp.asString());
		}
	   
	   //DELETE    /posts/1
	   
	  // @Test
		public void testDeleteRequest(){
			
			Response resp=given(). 
			when().
			delete("http://localhost:3000/posts/3");
			
			System.out.println("Deleting response: "+resp.asString());
		}
	   
	   //Complex Posts
	   //POST   /posts
	   
	   //@Test
		public void testComplexPostRequest(){
		   
		   Info info=new Info();
		   info.setEmail("info@appium-selenium.com");
		   info.setPhone("53423245");
		   info.setAddress("india");
		   
		   _Posts  posts=new _Posts();
		    posts.setId("10");
		    posts.setAuthor("serat");
		    posts.setTitle("seerat information");
		    posts.setInfo(info);
		    
		    
		    Response resp=given().
			body(posts).
			when().
			then().
			contentType(ContentType.JSON).
			post("http://localhost:3000/posts");
		    
		    System.out.println("Response: "+resp.asString());
	   }
	   
	   
	   
	   
	   
	 //Advanced Complex Posts
	   //POST   /posts
	   
	  // @Test
		public void testAdvancedComplexPostRequest(){
		   
		   Info info1=new Info();
		   info1.setEmail("test email 1");
		   info1.setPhone("test phone 1");
		   info1.setAddress("test address 1");
		   
		   Info info2=new Info();
		   info2.setEmail("test email 2");
		   info2.setPhone("test phone 2");
		   info2.setAddress("test address 2");
		   
		   AdvancedPosts  posts=new AdvancedPosts();
		    posts.setId("10");
		    posts.setAuthor("serat");
		    posts.setTitle("seerat information");
		    posts.setInfo(new Info[]{info1,info2});
		    
		    
		    Response resp=given().
			body(posts).
			when().
			then().
			contentType(ContentType.JSON).
			post("http://localhost:3000/posts");
		    
		    System.out.println("Response: "+resp.asString());
	   }
	   
	   
	   
	   
	   //Get Request calculate Response 
	   //Get  /posts
	   
	   @Test
	   public void getResponseTime(){
		   Response resp=given().
					when().
					then().
					post("http://localhost:3000/posts");
		   
		   //always showing in milli-seconds
		           Long time=resp.then().
				    extract().
				    time();
				    System.out.println("Response time is : "+time);
		   
	   }
}
