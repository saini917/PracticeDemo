package com.utils;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.support.events.EventFiringWebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import org.testng.Reporter;

public class ScreenshotVariable extends Browser_Intialize implements ITestListener{
	
	static String failureTestCase_ScreenShotLocation = "D:\\Workspace_NRDA\\HPHDS_Project\\Screenhot\\Failure_Screenshot\\";
	static String successTestCase_ScreenShotLocation = "D:\\Workspace_NRDA\\HPHDS_Project\\Screenhot\\Success_ScreenShot\\";
	public int scc = 0;
	
	public void onFinish(ITestContext arg0) {
		// TODO Auto-generated method stub
		
	}

	public void onStart(ITestContext arg0) {
		// TODO Auto-generated method stub
		
	}

	public void onTestFailedButWithinSuccessPercentage(ITestResult arg0) {
		// TODO Auto-generated method stub
		
	}

	public void onTestFailure(ITestResult result) {
		EventFiringWebDriver fdriver = new EventFiringWebDriver(driver);
		File sourcefile = fdriver.getScreenshotAs(OutputType.FILE);
		File destinatiofile = new File(
				failureTestCase_ScreenShotLocation + result.getName() + getDateTimeStamp() + scc + ".png");
		try {
			FileUtils.copyFile(sourcefile, destinatiofile);
		} catch (IOException e) {
			e.printStackTrace();
		}
		String filePath = destinatiofile.toString();
		String path = "<img src=\"file://" + filePath + "\" alt=\"\"/>";
		Reporter.log(path, true);
	}

	public void onTestSkipped(ITestResult arg0) {
		// TODO Auto-generated method stub
		
	}

	public void onTestStart(ITestResult arg0) {
		// TODO Auto-generated method stub
		
	}

	public void onTestSuccess(ITestResult result) {
		EventFiringWebDriver fdriver = new EventFiringWebDriver(driver);
		File sourcefile = fdriver.getScreenshotAs(OutputType.FILE);
		File destinatiofile = new File(
				successTestCase_ScreenShotLocation + result.getName() + getDateTimeStamp() + ".png");
		try {
			FileUtils.copyFile(sourcefile, destinatiofile);
		} catch (IOException e) {
			e.printStackTrace();
		}
		String filePath = destinatiofile.toString();
		String path = "<img src=\"file://" + filePath + "\" alt=\"\"/>";
		Reporter.log(path, true);

	}
	
	/********************************************************************************************************************/
	/**
	 * getDateTimeStamp() is used for display the month,date and time stamp
	 * along with failed testcases.
	 * 
	 * @return
	 * @author deepak.saini
	 * @since 2017-06-16
	 */
	/********************************************************************************************************************/
	public static String getDateTimeStamp() {
		// creates a date time stamp that is Windows OS filename compatible
		return new SimpleDateFormat(" MMM dd   HH.mm.ss").format(Calendar.getInstance().getTime());
	}

}
